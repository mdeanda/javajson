/* Generated By:JJTree: Do not edit this line. ASTmembers.java */

package net.sourceforge.javajson.parser;

public class ASTmembers extends SimpleNode {
	String key;

	Object value;

	enum Next {
		KEY, VALUE
	};

	Next on = Next.KEY;

	public ASTmembers(int id) {
		super(id);
	}

	public ASTmembers(JsonParser p, int id) {
		super(p, id);
	}

	@Override
	protected void interpret() {
		for (int i = 0; i < children.length; i++) {
			if (children[i] instanceof SimpleNode) {
				SimpleNode node = (SimpleNode) children[i];
				node.interpret();
			}
		}
	}

	@Override
	protected void push(Object o) {
		//System.out.println("pushing to member object: "
		//		+ o.getClass().getSimpleName());

		if (o instanceof TMember) {
			// recursive call
			//System.out.println("ignoring child member" + parent.getClass().getSimpleName());
			((SimpleNode) parent).push(o);
			on = Next.KEY;
		} else if (on == Next.KEY) {
			key = (String) o; // ((ASTstring) o).val;
			on = Next.VALUE;
		} else if (on == Next.VALUE) {
			value = o;
			on = Next.KEY;
			((SimpleNode) parent).push(new TMember(key, value));
		}
	}

}
