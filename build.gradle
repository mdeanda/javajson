buildscript {
	repositories {
		maven {
			url "http://repo.jfrog.org/artifactory/gradle"
		}
		jcenter()
		mavenLocal()
		dependencies {
			classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1')
		}
	}
}

description "javajson"

allprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'eclipse'
	apply plugin: 'com.jfrog.artifactory-upload'
	apply plugin: "com.jfrog.artifactory"

	group = 'com.thedeanda.javajson'
	version = '1.0-SNAPSHOT'
}
configurations {
	published
}
artifactory {
	contextUrl = "${artifactory_contextUrl}"
	publish {
		repository {
			if (version.matches(/[0-9\.]+$/)) {
				repoKey = 'libs-release-local'
			} else {
				repoKey = 'libs-snapshot-local'
			}
			username = "${artifactory_user}" //The publisher user name
			password = "${artifactory_password}" //The publisher password
		}
		defaults {
			publishConfigs('archives', 'published')
			//properties = ['build.status': "$it.project.status".toString()]
			publishPom = true //Publish generated POM files to Artifactory (true by default)
			publishIvy = false //Publish generated Ivy descriptor files to Artifactory (true by default)
		}
	}
	resolve {
		repository {
			repoKey = 'libs-release'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}
	}
}

subprojects {
	apply plugin: 'maven'
	apply plugin: 'java'
	apply plugin: 'jacoco'
	apply plugin: 'eclipse'

	archivesBaseName = rootProject.name + '-' + project.name
	//jar.baseName = "${parent.name}-${name}-${parent.version}"


	configurations {
		published
	}
	dependencies {
		testCompile 'junit:junit:4.+'
		testCompile 'commons-io:commons-io:2.+'
	}

	jacocoTestReport {
		reports {
			xml.enabled false
			csv.enabled false
			html.destination "${buildDir}/jacocoHtml"
		}
	}
	eclipse {
		project {
			name = "${parent.name}-${name}"
		}
	}
	jar {
		manifest.attributes provider: 'gradle'
	}
	task copyCoverageReport(type: Copy) {
		from 'build/jacocoHtml'
		into 'build/target/jacoco'
	}
	copyCoverageReport.dependsOn jacocoTestReport

	task copyTest(type: Copy) {
		from 'build/reports/tests'
		into 'build/target/tests'
	}
	copyTest.dependsOn test

	task copyJavadoc(type: Copy) {
		from 'build/docs/javadoc'
		into 'build/target/javadoc'
	}
	copyJavadoc.dependsOn javadoc

	task dist << {
		println("123")
	}
	dist.dependsOn compileJava, copyJavadoc, copyCoverageReport, copyTest


}

